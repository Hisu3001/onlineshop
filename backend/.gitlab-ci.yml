variables:
    USER_PROJECT: "onlineshop"
    PATH_PROJECT: "/home/${USER_PROJECT}/${CI_PROJECT_NAME}"
    IMAGE_VERSION: "${CI_PROJECT_NAME}:${CI_COMMIT_BRACH}_${CI_COMMIT_TAG}_${CI_COMMIT_SHORT_SHA}"
    SNYKSCAN_FILE: "${CI_PROJECT_NAME}_${CI_COMMIT_BRACH}_${CI_COMMIT_TAG}_${CI_COMMIT_SHORT_SHA}_snykscan"
    TRIVY_IMAGE_REPORT: "security_scan_image_${CI_PROJECT_NAME}_${CI_COMMIT_BRACH}_${CI_COMMIT_TAG}_${CI_COMMIT_SHORT_SHA}_report"

stages:
    - build
    - snykscan
    - security scan image
    - deploy

build:
    stage: build
    variables:
        GIT_STRATEGY: clone
    script:
        - docker build -t $IMAGE_VERSION .
    tags:
        - online-shop-runner-dev-shell
    only:
        - tags

snykscan:
    stage: snykscan
    variables:
        GIT_STRATEGY: none
    script:
        - docker build --rm --network host --build-arg SNYK_AUTH_TOKEN=$SNYK_TOKEN --build-arg OUTPUT_FILENAME=$SNYKSCAN_FILE -t $SNYKSCAN_FILE -f Dockerfile-snyk .
        - docker create --name $SNYKSCAN_FILE $SNYKSCAN_FILE
        - docker cp $SNYKSCAN_FILE:/app/$SNYKSCAN_FILE.html .
    tags:
        - online-shop-runner-dev-shell
    only:
        - tags
    artifacts:
        paths: 
        - $SNYKSCAN_FILE.html
        expire_in: 1 day

security scan image:
    stage: security scan image
    variables:
        GIT_STRATEGY: none
    script:
        - docker run --rm -v $(pwd):/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --format template --template "@contrib/html.tpl" -o /${CI_PROJECT_NAME}/${TRIVY_IMAGE_REPORT}.html $IMAGE_VERSION

    tags:
        - online-shop-runner-dev-shell
    only:
        - tags
    artifacts:
        paths: 
        - ${TRIVY_IMAGE_REPORT}.html
        expire_in: 1 day

deploy:
    stage: deploy
    variables:
        GIT_STRATEGY: none
    script:
        - sudo su ${USER_PROJECT} -c "docker rm -f $CI_PROJECT_NAME;docker run --name $CI_PROJECT_NAME -dp $BE_PORT $IMAGE_VERSION"
    tags:
        - online-shop-runner-dev-shell
    only:
        - tags
